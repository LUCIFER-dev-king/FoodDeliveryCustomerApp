import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:uimartcustomer/Authorization/SignIn.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:uimartcustomer/services/crud.dart';



class HomePage extends StatefulWidget {
  @override
   _HomePageState createState() => _HomePageState();
}
class _HomePageState extends State<HomePage> {

    FirebaseAuth firebaseAuth = FirebaseAuth.instance;
    FirebaseUser user;
    bool isSigned = false;

  Crud curd = new Crud();
  QuerySnapshot hotelinfo;
  bool openClose;

   checkAuthState(){
    firebaseAuth.onAuthStateChanged.listen((user) async {
      if(user == null){
        Navigator.of(context).pushReplacement(MaterialPageRoute(builder: (context)=>SignIn()));
      }
    });
  }

  getUser() async {
    FirebaseUser firebaseUser = await firebaseAuth.currentUser();
    await firebaseUser?.reload();
    firebaseUser = await firebaseAuth.currentUser();

    if(firebaseUser!=null){
      setState(() {
        this.user = firebaseUser;
        this.isSigned = true;
      });
    }
  }

  signOut() async {
    firebaseAuth.signOut();
  }
    @override
  void initState() {
    // TODO: implement initState
    super.initState();
    this.checkAuthState();
    this.getUser();
    this.crudOperation();
    this.availability();
    this.test();
  }

  void crudOperation(){
    curd.getData().then((result){
      setState(() {
        hotelinfo = result;
      });
    });
  }

  void availability() async{
    return await Firestore.instance.collection('HotelManagement')
    .document('OverallInformation')
    .get()
    .then((value) {
      if(value.data['Availability'] == true){
        openClose = true;
        print(openClose);
      }
      else{
        openClose = false;
      }
    });
  }
QuerySnapshot testing;
  test() async{
    return await Firestore.instance.collection('HotelManagement').snapshots().listen((event) {
       event.documents.forEach((doc) {
         print(doc.documentID.toString());
          Firestore.instance.collection('HotelManagement').document(doc.documentID).collection('HotelBasicInfo').document('Information').get().then((value) => print(value.data['name']));
       });
     });
  }


 Widget build(BuildContext context) {
     return Scaffold(
       resizeToAvoidBottomPadding: false,
       body: SingleChildScrollView(
        child: Container(
          child: Column(
            children: <Widget>[
              Container(
                height: 100.0,
              ),
              Text("Restaurents you may look for...",
                  style: TextStyle(
                    fontSize: 45.0,
                    fontWeight: FontWeight.bold,
                    color: Colors.black
                  ),
              ), 
              SizedBox(height: 30.0,),
              Container(
                height: 450.0,
                child: ListView.builder(
                itemCount: hotelinfo.documents.length,
                padding: EdgeInsets.all(5.0),
                itemBuilder: (context,i){
                  return buildFittedBox('https://learncodeonline.in/mascot.png',hotelinfo.documents[i].data['name'],hotelinfo.documents[i].data['type']);
                }
              )
              ),
            ],
          ), 
         ),
       ),
     );
  }
    Widget buildFittedBox(String url, String title, String subtitle) {

       if(hotelinfo!=null){
         return GestureDetector(
         onTap: (){
           if(openClose!=true){

           }else{

           }
         },
                child: Column(
                  children: <Widget>[
                    SizedBox(height: 10.0,),
                    FittedBox(
                          child: Container(
                            height: 100.0,
                            width: 350.0,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(25.0),
                              color: Colors.white,
                              boxShadow: [
                              BoxShadow(
                                color: Colors.grey,
                                offset: Offset(0.0, 1.0), //(x,y)
                                blurRadius: 6.0,
                              ),
                            ],
                            ),
                            child: Row(  
                              
                              children: <Widget>[
                                Image(
                                  image: NetworkImage(url),
                                  height: 100.0,
                                  width: 100.0,
                                  
                                ),
                                Column(
                                  children: <Widget>[
                                    Padding(padding: EdgeInsets.only(top: 5.0,right:5.0)),
                                    Text(title,style: TextStyle(
                                      fontSize: 25.0,
                                      fontWeight: FontWeight.bold
                                      
                                    ),
                                    textAlign: TextAlign.right,
                                    ),
                                    Padding(padding: EdgeInsets.only(top: 10.0)),
                                    Text(subtitle,style: TextStyle(
                                      fontSize: 20.0,
                                      color: Colors.grey
                                    ),
                                    textAlign: TextAlign.right
                                    ),
                                  ],
                                ),
                                //availabilityOpenClosed(),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
       );
       }
       else{
         return Center(
           child: Text("Loading Please Wait...")
         );
       }
       
     }

     Widget availabilityOpenClosed()
     {
       return openClose ? Center(
         child: Text(
           '',
           style: TextStyle(
             fontWeight: FontWeight.bold,
             color: Colors.red
           ),
         )
       ) :  Center(
         child: Text(
           'Closed',
           style: TextStyle(
             fontWeight: FontWeight.bold,
             color: Colors.red
           ),
         )
       );
     }
} 
